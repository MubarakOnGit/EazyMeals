import 'package:eazy_meals/screens/splash_screen.dart';
import 'package:eazy_meals/screens/verification_screen.dart';
import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // Generated by FlutterFire CLI
import 'package:eazy_meals/screens/onboarding_screen.dart';
import 'package:eazy_meals/screens/login_screen.dart';
import 'package:eazy_meals/home/customer_dashboard.dart';
import 'package:eazy_meals/home/menu_screen.dart';
import 'package:eazy_meals/home/view_all_screen.dart';
import 'package:get/get.dart';
import 'package:eazy_meals/controllers/order_status_controller.dart';
import 'package:eazy_meals/controllers/pause_play_controller.dart'; // Add this import

Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase with error handling
  try {
    await Firebase.initializeApp(
      options: DefaultFirebaseOptions.currentPlatform,
    );
  } catch (e) {
    // In production, consider logging this to a service instead of printing
    print('Firebase initialization error: $e');
  }

  // Initialize GetX controllers globally
  Get.put(OrderController(), permanent: true); // Persistent OrderController
  Get.put(PausePlayController(), permanent: true); // Persistent PausePlayController

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return GetMaterialApp(
      debugShowCheckedModeBanner: false,
      home: const SplashScreen(), // Use const for performance
      routes: {
        '/onboarding': (context) => const OnboardingScreen(),
        '/login': (context) => const LoginScreen(),
        '/CustomerDashboard': (context) => const CustomerDashboard(),
        '/verification': (context) =>  VerificationScreen(),
        '/menu': (context) => const MenuScreen(),
        '/viewAll': (context) => const ViewAllScreen(),
      },
      builder: (context, child) {
        final mediaQueryData = MediaQuery.of(context);
        return MediaQuery(
          data: mediaQueryData.copyWith(
            textScaler: const TextScaler.linear(1.0).clamp(
              minScaleFactor: 1.0,
              maxScaleFactor: 1.2,
            ),
          ),
          child: child!,
        );
      },
    );
  }
}